{"version":3,"sources":["images/Pepsi-Logo.png","components/NavBar.js","pages/Home.js","pages/About.js","pages/Article-content.js","components/ArticlesListComponent.js","pages/ArticlesList.js","components/CommentsList.js","components/UpvotesSection.js","components/AddCommentForm.js","pages/Article.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavBar","props","state","collapse","onClick","bind","window","location","reload","this","set","State","Navbar","className","Brand","Nav","Link","e","history","push","to","Item","Form","inline","FormControl","type","placeholder","Button","variant","React","Component","withRouter","Home","src","logo","alt","About","articles","name","title","content","ArticlesListComponent","map","article","key","substring","ArticlesList","Content","CommentsList","comments","comment","username","text","UpvotesSection","articleName","upvotes","setArticleInfo","upvoteArticle","a","fetch","method","result","json","body","id","AddCommentForm","useState","setUsername","commentText","setCommentText","addComment","JSON","stringify","headers","value","onChange","event","target","rows","cols","Article","match","params","find","articleInfo","useEffect","fetchData","paragraph","App","path","component","exact","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d37b4010.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Pepsi-Logo.cc7ad3d3.png\";","import React from 'react';\nimport '../css/NavBar.css';\nimport { Navbar, Nav, Form, FormControl, Button} from 'react-bootstrap';\nimport {BrowserRouter as Router, withRouter} from 'react-router-dom';\n\n\nclass NavBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapse:false\n    };\n    this.onClick = this.onClick.bind(this);\n  }\n\n  reload(){\n    window.location.reload();\n  }\n\n  onClick(){\n    this.set.State({\n      collapse: !this.state.collapse\n    });\n  }\n\n  render() {\n    return(\n      <Router>\n        <Navbar className=\"NavBar\">\n            <Navbar.Brand>\n              <Nav.Link className=\"NavBar-Brand\" onClick={ e => this.props.history.push(\"/\")} to=\"/\">PepsiBlock</Nav.Link>\n            </Navbar.Brand>\n            <Nav className=\"mr-auto\" >\n                <Nav.Item>\n                  <Nav.Link onClick={ e => this.props.history.push(\"/\")} to=\"/\" >Home</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link onClick={ e => this.props.history.push(\"/articles-list\")} to=\"/articles-list\" >Articles</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link onClick={ e => this.props.history.push(\"/about\")} to=\"/about\">About</Nav.Link>\n                </Nav.Item>\n              </Nav>\n              <Nav className=\"mr-right\">\n                <Form inline>\n                <FormControl type=\"text\" placeholder=\"Type anything...\" className=\"mr-sm-2\" />\n                <Button variant=\"outline-primary\">Search</Button>\n                </Form>\n              </Nav>\n        </Navbar>\n      </Router>\n    );\n  }\n}\n\nexport default withRouter(NavBar);","import React from 'react';\nimport logo from '../images/Pepsi-Logo.png';\nimport '../css/Home.css'\n\nconst Home = () => (\n    <>\n        <div className=\"Home\">\n        <img src={logo} className=\"Home-logo\" alt=\"logo\" />\n            <div className=\"HomeScreen\">\n        \n                <h1>Welcome to my Blog mathafacka!</h1>\n\n                <p>无可否认，当读者在浏览一个页面的排版时，难免会被可阅读的内容所分散注意力。\n                    Lorem Ipsum的目的就是为了保持字母多多少少标准及平均的分配，而不是“此处有文本，\n                    此处有文本”，从而让内容更像可读的英语。如今，很多桌面排版软件以及网页编辑用Lorem \n                    Ipsum作为默认的示范文本，搜一搜“Lorem Ipsum”就能找到这些网站的雏形。这些年来Lorem \n                    Ipsum演变出了各式各样的版本，有些出于偶然，有些则是故意的（刻意的幽默之类的）。\n                </p> \n\n            </div>\n        </div>\n    </> \n);\n\nexport default Home;","import React from 'react';\nimport '../css/About.css';\n\nconst About = () => (\n    <>\n        <div className=\"About\">\n            <h1>About</h1>\n            <p>\n                恰恰与流行观念相反，Lorem Ipsum并不是简简单单的随机文本。它追溯于一篇公元前45年的经典拉丁著作，\n                从而使它有着两千多年的岁数。弗吉尼亚州Hampden-Sydney大学拉丁系教授Richard McClintock曾在Lorem \n                Ipsum段落中注意到一个涵义十分隐晦的拉丁词语，“consectetur”，\n                通过这个单词详细查阅跟其有关的经典文学著作原文，McClintock教授发掘了这个不容置疑的出处。\n                Lorem Ipsum始于西塞罗(Cicero)在公元前45年作的“de Finibus Bonorum et Malorum”（\n                善恶之尽）里1.10.32 和1.10.33章节。这本书是一本关于道德理论的论述，曾在文艺复兴时期非常流行。\n                Lorem Ipsum的第一行”Lorem ipsum dolor sit amet..”节选于1.10.32章节。\n            </p>\n            <p>\n                以下展示了自1500世纪以来使用的标准Lorem Ipsum段落，西塞罗笔下“de Finibus Bonorum \n                et Malorum”章节1.10.32 ， 1.10.33的原著作，以及其1914年译自H. Rackham的英文版本\n            </p>\n        </div>\n    </>\n);\n\nexport default About;","const articles = [\n    {\n        name: 'learn-coke',\n        title: 'The ez way - coke practise',\n        content: [\n            'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin semper tellus quis quam fringilla, eget hendrerit dolor eleifend. Phasellus at ipsum nec ligula posuere ultrices. Duis nec tellus vitae sem porta vestibulum. Duis blandit faucibus dapibus. Nullam varius massa aliquam purus vestibulum tincidunt. In hac habitasse platea dictumst. Proin auctor tempus felis, at placerat ex mollis id. Ut sagittis, sapien nec tempor placerat, ipsum arcu lacinia nulla, et sodales dolor dolor in magna. Proin feugiat suscipit nulla faucibus fringilla.',\n            'Nulla ut ligula sed metus consequat malesuada. Nam mi felis, imperdiet vel tortor et, tristique hendrerit metus. Curabitur sodales congue erat, at pharetra felis accumsan at. Fusce in lobortis sapien. Etiam accumsan vestibulum leo eu faucibus. Sed ultrices eros eget nisi molestie, in vehicula sem lobortis. ',\n            'Suspendisse posuere eros a ipsum tincidunt, ac malesuada nisl iaculis. Curabitur eu dapibus nibh. Ut molestie orci sit amet turpis convallis, sed venenatis ligula vulputate. Mauris ut faucibus augue, sed dignissim risus. Suspendisse egestas eget tortor at hendrerit. Proin nec ullamcorper libero. Curabitur suscipit risus non tempus convallis. Aenean scelerisque quam in lacus lobortis rhoncus. Suspendisse nisl ligula, volutpat at dictum nec, volutpat eget orci.'\n        ]\n    },\n    {\n        name: 'PepsivsCoke',\n        title: 'Pepsi - Crucial battle',\n        content: [\n            'Quisque ante turpis, mollis ut viverra id, lacinia vel dui. Donec vel risus lorem. Sed suscipit, neque et aliquam imperdiet, quam nisl blandit purus, vel pharetra augue mauris id metus. Nunc consequat leo non erat blandit, mattis lacinia purus convallis. Morbi vulputate condimentum purus eget tempus. Praesent feugiat, tellus eu dictum condimentum, risus elit tincidunt tellus, eu iaculis erat erat eu urna. Mauris facilisis tristique dapibus.',            'Nulla ut ligula sed metus consequat malesuada. Nam mi felis, imperdiet vel tortor et, tristique hendrerit metus. Curabitur sodales congue erat, at pharetra felis accumsan at. Fusce in lobortis sapien. Etiam accumsan vestibulum leo eu faucibus. Sed ultrices eros eget nisi molestie, in vehicula sem lobortis. ',\n            'Suspendisse posuere eros a ipsum tincidunt, ac malesuada nisl iaculis. Curabitur eu dapibus nibh. Ut molestie orci sit amet turpis convallis, sed venenatis ligula vulputate. Mauris ut faucibus augue, sed dignissim risus. Suspendisse egestas eget tortor at hendrerit. Proin nec ullamcorper libero. Curabitur suscipit risus non tempus convallis. Aenean scelerisque quam in lacus lobortis rhoncus. Suspendisse nisl ligula, volutpat at dictum nec, volutpat eget orci.'\n        ]\n    },\n    {\n        name: 'Sprite',\n        title: 'Sprite the new Gladiator',\n        content: [\n            'Curabitur, mollis ut viverra id, lacinia vel dui. Donec vel risus lorem. Sed suscipit, neque et aliquam imperdiet, quam nisl blandit purus, vel pharetra augue mauris id metus. Nunc consequat leo non erat blandit, mattis lacinia purus convallis. Morbi vulputate condimentum purus eget tempus. Praesent feugiat, tellus eu dictum condimentum, risus elit tincidunt tellus, eu iaculis erat erat eu urna. Mauris facilisis tristique dapibus.',            'Nulla ut ligula sed metus consequat malesuada. Nam mi felis, imperdiet vel tortor et, tristique hendrerit metus. Curabitur sodales congue erat, at pharetra felis accumsan at. Fusce in lobortis sapien. Etiam accumsan vestibulum leo eu faucibus. Sed ultrices eros eget nisi molestie, in vehicula sem lobortis. ',\n            'Suspendisse posuere eros a ipsum tincidunt, ac malesuada nisl iaculis. Curabitur eu dapibus nibh. Ut molestie orci sit amet turpis convallis, sed venenatis ligula vulputate. Mauris ut faucibus augue, sed dignissim risus. Suspendisse egestas eget tortor at hendrerit. Proin nec ullamcorper libero. Curabitur suscipit risus non tempus convallis. Aenean scelerisque quam in lacus lobortis rhoncus. Suspendisse nisl ligula, volutpat at dictum nec, volutpat eget orci.'\n        ]\n    }\n];\n\nexport default articles;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n\nconst ArticlesListComponent = ({articles}) => (\n    <>\n        {articles.map((article, key) => (\n            <Link className=\"List\" key={key} to={`/articles-list/article/${article.name}`}>\n                <h3>{article.title}</h3>\n                <p>{article.content[0].substring(0,180)}...</p><br />\n            </Link>\n        ))}\n    </>\n)\n\nexport default ArticlesListComponent;","import React from 'react';\nimport '../css/ArticlesList.css';\nimport Content from './Article-content';\nimport List from '../components/ArticlesListComponent';\n\nconst ArticlesList = () => (\n    <>\n        <div className=\"ArticlesList\">\n            <h1>Articles</h1>\n            <List articles={Content} />\n        </div> \n    </>\n);\n\nexport default ArticlesList;","import React from 'react';\n\nconst CommentsList = ({ comments }) => (\n    <>\n        <h3>Comments:</h3>\n        {comments.map((comment, key) => (\n            <div className=\"comment\" key={key}>\n                <h4>{comment.username}</h4>\n                <p>{comment.text}</p>\n            </div>\n        ))}\n    </>\n)\n\nexport default  CommentsList;","import React from 'react';\n\nconst UpvotesSection = ({articleName, upvotes, setArticleInfo}) => {\n\n    const upvoteArticle = async () => {\n        const result = await fetch(`/api/articles/${articleName}/upvote`, {\n            method: 'post',\n        });\n        const body = await result.json();\n        setArticleInfo(body);\n    }\n    return(\n    <div id=\"upvotes-section\">\n        <button onClick={() => upvoteArticle()}>Add Upvote</button>\n        <p> This post has been upvoted {upvotes} times!</p>\n    </div>\n    );\n}\n\nexport default UpvotesSection;","import React, { useState } from 'react';\n\nconst AddCommentForm = ({ articleName, setArticleInfo }) => {\n\n    const [username, setUsername] = useState('');\n    const [commentText, setCommentText] = useState('');\n\n    const addComment = async () => {\n        const result = await fetch(`/api/articles/${articleName}/add-comment`, {\n            method: 'post',\n            body: JSON.stringify({ username, text: commentText}),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });\n        const body = await result.json();\n        setArticleInfo(body);\n        setUsername('');\n        setCommentText('');\n    }\n\n    return(\n        <div id=\"add-comment-form\">\n            <h3>Add a Comment</h3>\n            <label>\n                Name:\n                <input type=\"text\" value={username} onChange={(event) => setUsername(event.target.value)} />\n            </label>\n            <label>\n                Comment:\n                <textarea rows=\"4\" cols=\"50\" value={commentText} onChange={(event) => setCommentText(event.target.value)}/>\n            </label>\n            <button onClick={() => addComment()}> Add Comment</button>\n        \n        </div>\n    );\n}\n\nexport default AddCommentForm;","import React, { useState, useEffect } from 'react';\nimport '../css/Article.css';\n\nimport Content from './Article-content';\nimport Comments from '../components/CommentsList';\nimport UpvotesSection from '../components/UpvotesSection';\nimport AddCommentForm from '../components/AddCommentForm';\n\nconst Article = ({match}) => {\n    \n    const name = match.params.name;\n    const article = Content.find(article => article.name === name);\n\n    const [ articleInfo, setArticleInfo ] = useState({ upvotes:0, comments:[] });\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const result = await fetch(`/api/articles/${name}`);\n            const body = await result.json();\n            setArticleInfo(body);\n        }\n        fetchData();\n    }, [name]);\n\n    if (!article) return <h1>Error 401:(</h1>;\n\n    return (\n        <>\n            <div className=\"Article\">\n                \n                <h1>Article about {article.title}!</h1>\n                <UpvotesSection articleName={name} upvotes={articleInfo.upvotes} setArticleInfo={setArticleInfo} />\n                {article.content.map((paragraph, key) => (\n                    <p key={key}>{paragraph}</p>\n                ))}\n                <AddCommentForm articleName={name} setArticleInfo={setArticleInfo} />\n                <Comments comments={articleInfo.comments} />\n            </div>\n        </>\n    )\n};\n\nexport default Article;","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport './css/App.css';\nimport NavBar from './components/NavBar';\n//import Footer from './elements/Footer';\nimport Home from './pages/Home';\nimport About from './pages/About';\nimport ArticlesList from './pages/ArticlesList';\nimport Article from './pages/Article';\n\n\nfunction App() {\n  return (\n    <Router>\n      <NavBar />\n      <div className=\"App\">\n        <Route path=\"/\" component={Home} exact /> \n        <Route path=\"/about\" component={About} />\n        <Route path=\"/articles-list\" component={ArticlesList} exact/>\n        <Route path=\"/articles-list/article/:name\" component={Article} />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}